/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var com_freeje_common_pb = require('../../../../com/freeje/common_pb.js');
goog.object.extend(proto, com_freeje_common_pb);
goog.exportSymbol('proto.com.freeje.api.client.DidLocality', null, global);
goog.exportSymbol('proto.com.freeje.api.client.DidNumber', null, global);
goog.exportSymbol('proto.com.freeje.api.client.DidOffer', null, global);
goog.exportSymbol('proto.com.freeje.api.client.DidRequest', null, global);
goog.exportSymbol('proto.com.freeje.api.client.OfferBasket', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.freeje.api.client.DidLocality = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.freeje.api.client.DidLocality, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.freeje.api.client.DidLocality.displayName = 'proto.com.freeje.api.client.DidLocality';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.freeje.api.client.DidRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.freeje.api.client.DidRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.freeje.api.client.DidRequest.displayName = 'proto.com.freeje.api.client.DidRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.freeje.api.client.OfferBasket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.freeje.api.client.OfferBasket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.freeje.api.client.OfferBasket.displayName = 'proto.com.freeje.api.client.OfferBasket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.freeje.api.client.DidOffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.freeje.api.client.DidOffer.repeatedFields_, null);
};
goog.inherits(proto.com.freeje.api.client.DidOffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.freeje.api.client.DidOffer.displayName = 'proto.com.freeje.api.client.DidOffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.freeje.api.client.DidNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.freeje.api.client.DidNumber.repeatedFields_, null);
};
goog.inherits(proto.com.freeje.api.client.DidNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.freeje.api.client.DidNumber.displayName = 'proto.com.freeje.api.client.DidNumber';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.freeje.api.client.DidLocality.prototype.toObject = function(opt_includeInstance) {
  return proto.com.freeje.api.client.DidLocality.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.freeje.api.client.DidLocality} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.DidLocality.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    prefix: jspb.Message.getFieldWithDefault(msg, 2, ""),
    country: jspb.Message.getFieldWithDefault(msg, 3, ""),
    label: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.freeje.api.client.DidLocality}
 */
proto.com.freeje.api.client.DidLocality.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.freeje.api.client.DidLocality;
  return proto.com.freeje.api.client.DidLocality.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.freeje.api.client.DidLocality} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.freeje.api.client.DidLocality}
 */
proto.com.freeje.api.client.DidLocality.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefix(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.freeje.api.client.DidLocality.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.freeje.api.client.DidLocality.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.freeje.api.client.DidLocality} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.DidLocality.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrefix();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.freeje.api.client.DidLocality.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidLocality.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string prefix = 2;
 * @return {string}
 */
proto.com.freeje.api.client.DidLocality.prototype.getPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidLocality.prototype.setPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string country = 3;
 * @return {string}
 */
proto.com.freeje.api.client.DidLocality.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidLocality.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.com.freeje.api.client.DidLocality.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidLocality.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.freeje.api.client.DidRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.freeje.api.client.DidRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.freeje.api.client.DidRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.DidRequest.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.freeje.api.client.DidRequest}
 */
proto.com.freeje.api.client.DidRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.freeje.api.client.DidRequest;
  return proto.com.freeje.api.client.DidRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.freeje.api.client.DidRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.freeje.api.client.DidRequest}
 */
proto.com.freeje.api.client.DidRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.freeje.api.client.DidRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.freeje.api.client.DidRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.freeje.api.client.DidRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.DidRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.freeje.api.client.DidRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.freeje.api.client.OfferBasket.prototype.toObject = function(opt_includeInstance) {
  return proto.com.freeje.api.client.OfferBasket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.freeje.api.client.OfferBasket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.OfferBasket.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offer: (f = msg.getOffer()) && proto.com.freeje.api.client.DidOffer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.freeje.api.client.OfferBasket}
 */
proto.com.freeje.api.client.OfferBasket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.freeje.api.client.OfferBasket;
  return proto.com.freeje.api.client.OfferBasket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.freeje.api.client.OfferBasket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.freeje.api.client.OfferBasket}
 */
proto.com.freeje.api.client.OfferBasket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.com.freeje.api.client.DidOffer;
      reader.readMessage(value,proto.com.freeje.api.client.DidOffer.deserializeBinaryFromReader);
      msg.setOffer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.freeje.api.client.OfferBasket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.freeje.api.client.OfferBasket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.freeje.api.client.OfferBasket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.OfferBasket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.freeje.api.client.DidOffer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.freeje.api.client.OfferBasket.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.OfferBasket.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DidOffer offer = 2;
 * @return {?proto.com.freeje.api.client.DidOffer}
 */
proto.com.freeje.api.client.OfferBasket.prototype.getOffer = function() {
  return /** @type{?proto.com.freeje.api.client.DidOffer} */ (
    jspb.Message.getWrapperField(this, proto.com.freeje.api.client.DidOffer, 2));
};


/** @param {?proto.com.freeje.api.client.DidOffer|undefined} value */
proto.com.freeje.api.client.OfferBasket.prototype.setOffer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.com.freeje.api.client.OfferBasket.prototype.clearOffer = function() {
  this.setOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.freeje.api.client.OfferBasket.prototype.hasOffer = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.freeje.api.client.DidOffer.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.freeje.api.client.DidOffer.prototype.toObject = function(opt_includeInstance) {
  return proto.com.freeje.api.client.DidOffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.freeje.api.client.DidOffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.DidOffer.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    number: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    price: (f = msg.getPrice()) && com_freeje_common_pb.DidPrice.toObject(includeInstance, f),
    requirementsList: jspb.Message.getRepeatedField(msg, 5),
    featuresList: jspb.Message.getRepeatedField(msg, 6),
    documentIdsList: jspb.Message.getRepeatedField(msg, 7),
    notes: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.freeje.api.client.DidOffer}
 */
proto.com.freeje.api.client.DidOffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.freeje.api.client.DidOffer;
  return proto.com.freeje.api.client.DidOffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.freeje.api.client.DidOffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.freeje.api.client.DidOffer}
 */
proto.com.freeje.api.client.DidOffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumber(value);
      break;
    case 3:
      var value = /** @type {!proto.com.freeje.PhoneType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new com_freeje_common_pb.DidPrice;
      reader.readMessage(value,com_freeje_common_pb.DidPrice.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {!Array<!proto.com.freeje.DocumentType>} */ (reader.readPackedEnum());
      msg.setRequirementsList(value);
      break;
    case 6:
      var value = /** @type {!Array<!proto.com.freeje.NumberFeature>} */ (reader.readPackedEnum());
      msg.setFeaturesList(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addDocumentIds(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.freeje.api.client.DidOffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.freeje.api.client.DidOffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.freeje.api.client.DidOffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.DidOffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      com_freeje_common_pb.DidPrice.serializeBinaryToWriter
    );
  }
  f = message.getRequirementsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getDocumentIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.freeje.api.client.DidOffer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidOffer.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string number = 2;
 * @return {string}
 */
proto.com.freeje.api.client.DidOffer.prototype.getNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidOffer.prototype.setNumber = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional com.freeje.PhoneType type = 3;
 * @return {!proto.com.freeje.PhoneType}
 */
proto.com.freeje.api.client.DidOffer.prototype.getType = function() {
  return /** @type {!proto.com.freeje.PhoneType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.com.freeje.PhoneType} value */
proto.com.freeje.api.client.DidOffer.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional com.freeje.DidPrice price = 4;
 * @return {?proto.com.freeje.DidPrice}
 */
proto.com.freeje.api.client.DidOffer.prototype.getPrice = function() {
  return /** @type{?proto.com.freeje.DidPrice} */ (
    jspb.Message.getWrapperField(this, com_freeje_common_pb.DidPrice, 4));
};


/** @param {?proto.com.freeje.DidPrice|undefined} value */
proto.com.freeje.api.client.DidOffer.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.com.freeje.api.client.DidOffer.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.freeje.api.client.DidOffer.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated com.freeje.DocumentType requirements = 5;
 * @return {!Array<!proto.com.freeje.DocumentType>}
 */
proto.com.freeje.api.client.DidOffer.prototype.getRequirementsList = function() {
  return /** @type {!Array<!proto.com.freeje.DocumentType>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<!proto.com.freeje.DocumentType>} value */
proto.com.freeje.api.client.DidOffer.prototype.setRequirementsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.com.freeje.DocumentType} value
 * @param {number=} opt_index
 */
proto.com.freeje.api.client.DidOffer.prototype.addRequirements = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.com.freeje.api.client.DidOffer.prototype.clearRequirementsList = function() {
  this.setRequirementsList([]);
};


/**
 * repeated com.freeje.NumberFeature features = 6;
 * @return {!Array<!proto.com.freeje.NumberFeature>}
 */
proto.com.freeje.api.client.DidOffer.prototype.getFeaturesList = function() {
  return /** @type {!Array<!proto.com.freeje.NumberFeature>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<!proto.com.freeje.NumberFeature>} value */
proto.com.freeje.api.client.DidOffer.prototype.setFeaturesList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.com.freeje.NumberFeature} value
 * @param {number=} opt_index
 */
proto.com.freeje.api.client.DidOffer.prototype.addFeatures = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.com.freeje.api.client.DidOffer.prototype.clearFeaturesList = function() {
  this.setFeaturesList([]);
};


/**
 * repeated string document_ids = 7;
 * @return {!Array<string>}
 */
proto.com.freeje.api.client.DidOffer.prototype.getDocumentIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<string>} value */
proto.com.freeje.api.client.DidOffer.prototype.setDocumentIdsList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.com.freeje.api.client.DidOffer.prototype.addDocumentIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.com.freeje.api.client.DidOffer.prototype.clearDocumentIdsList = function() {
  this.setDocumentIdsList([]);
};


/**
 * optional string notes = 8;
 * @return {string}
 */
proto.com.freeje.api.client.DidOffer.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidOffer.prototype.setNotes = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.freeje.api.client.DidNumber.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.freeje.api.client.DidNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.com.freeje.api.client.DidNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.freeje.api.client.DidNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.DidNumber.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    number: jspb.Message.getFieldWithDefault(msg, 2, ""),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    country: jspb.Message.getFieldWithDefault(msg, 4, ""),
    payedTill: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdms: jspb.Message.getFieldWithDefault(msg, 6, 0),
    locality: jspb.Message.getFieldWithDefault(msg, 7, ""),
    type: jspb.Message.getFieldWithDefault(msg, 8, 0),
    price: (f = msg.getPrice()) && com_freeje_common_pb.DidPrice.toObject(includeInstance, f),
    notes: jspb.Message.getFieldWithDefault(msg, 10, ""),
    featuresList: jspb.Message.getRepeatedField(msg, 11),
    status: jspb.Message.getFieldWithDefault(msg, 12, 0),
    incomplete: jspb.Message.getFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.freeje.api.client.DidNumber}
 */
proto.com.freeje.api.client.DidNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.freeje.api.client.DidNumber;
  return proto.com.freeje.api.client.DidNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.freeje.api.client.DidNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.freeje.api.client.DidNumber}
 */
proto.com.freeje.api.client.DidNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPayedTill(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedms(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocality(value);
      break;
    case 8:
      var value = /** @type {!proto.com.freeje.PhoneType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 9:
      var value = new com_freeje_common_pb.DidPrice;
      reader.readMessage(value,com_freeje_common_pb.DidPrice.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 11:
      var value = /** @type {!Array<!proto.com.freeje.NumberFeature>} */ (reader.readPackedEnum());
      msg.setFeaturesList(value);
      break;
    case 12:
      var value = /** @type {!proto.com.freeje.DidStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncomplete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.freeje.api.client.DidNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.freeje.api.client.DidNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.freeje.api.client.DidNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.freeje.api.client.DidNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPayedTill();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getCreatedms();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getLocality();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      com_freeje_common_pb.DidPrice.serializeBinaryToWriter
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      11,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getIncomplete();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.freeje.api.client.DidNumber.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidNumber.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string number = 2;
 * @return {string}
 */
proto.com.freeje.api.client.DidNumber.prototype.getNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidNumber.prototype.setNumber = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.com.freeje.api.client.DidNumber.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidNumber.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string country = 4;
 * @return {string}
 */
proto.com.freeje.api.client.DidNumber.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidNumber.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 payed_till = 5;
 * @return {number}
 */
proto.com.freeje.api.client.DidNumber.prototype.getPayedTill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.com.freeje.api.client.DidNumber.prototype.setPayedTill = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 createdms = 6;
 * @return {number}
 */
proto.com.freeje.api.client.DidNumber.prototype.getCreatedms = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.com.freeje.api.client.DidNumber.prototype.setCreatedms = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string locality = 7;
 * @return {string}
 */
proto.com.freeje.api.client.DidNumber.prototype.getLocality = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidNumber.prototype.setLocality = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional com.freeje.PhoneType type = 8;
 * @return {!proto.com.freeje.PhoneType}
 */
proto.com.freeje.api.client.DidNumber.prototype.getType = function() {
  return /** @type {!proto.com.freeje.PhoneType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.com.freeje.PhoneType} value */
proto.com.freeje.api.client.DidNumber.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional com.freeje.DidPrice price = 9;
 * @return {?proto.com.freeje.DidPrice}
 */
proto.com.freeje.api.client.DidNumber.prototype.getPrice = function() {
  return /** @type{?proto.com.freeje.DidPrice} */ (
    jspb.Message.getWrapperField(this, com_freeje_common_pb.DidPrice, 9));
};


/** @param {?proto.com.freeje.DidPrice|undefined} value */
proto.com.freeje.api.client.DidNumber.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.com.freeje.api.client.DidNumber.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.freeje.api.client.DidNumber.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string notes = 10;
 * @return {string}
 */
proto.com.freeje.api.client.DidNumber.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.com.freeje.api.client.DidNumber.prototype.setNotes = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated com.freeje.NumberFeature features = 11;
 * @return {!Array<!proto.com.freeje.NumberFeature>}
 */
proto.com.freeje.api.client.DidNumber.prototype.getFeaturesList = function() {
  return /** @type {!Array<!proto.com.freeje.NumberFeature>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<!proto.com.freeje.NumberFeature>} value */
proto.com.freeje.api.client.DidNumber.prototype.setFeaturesList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!proto.com.freeje.NumberFeature} value
 * @param {number=} opt_index
 */
proto.com.freeje.api.client.DidNumber.prototype.addFeatures = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.com.freeje.api.client.DidNumber.prototype.clearFeaturesList = function() {
  this.setFeaturesList([]);
};


/**
 * optional com.freeje.DidStatus status = 12;
 * @return {!proto.com.freeje.DidStatus}
 */
proto.com.freeje.api.client.DidNumber.prototype.getStatus = function() {
  return /** @type {!proto.com.freeje.DidStatus} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {!proto.com.freeje.DidStatus} value */
proto.com.freeje.api.client.DidNumber.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional bool incomplete = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.freeje.api.client.DidNumber.prototype.getIncomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.com.freeje.api.client.DidNumber.prototype.setIncomplete = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


goog.object.extend(exports, proto.com.freeje.api.client);
